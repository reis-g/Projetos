import java.util.ArrayList;
import java.util.Scanner;

// Classe que representa um contato
class Contato {
    private String nome;
    private String telefone;
    private String email;

    public Contato(String nome, String telefone, String email) {
        this.nome = nome;
        this.telefone = telefone;
        this.email = email;
    }

    // Getters
    public String getNome() {
        return nome;
    }

    public String getTelefone() {
        return telefone;
    }

    public String getEmail() {
        return email;
    }

    // Método para exibir as informações do contato
    public void exibirContato() {
        System.out.println("Nome: " + nome);
        System.out.println("Telefone: " + telefone);
        System.out.println("E-mail: " + email);
        System.out.println("------------------------");
    }
}

// Classe principal que gerencia os contatos
public class GerenciadorContatos {
    private static ArrayList<Contato> contatos = new ArrayList<>();
    private static Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        int opcao = 0;

        while (opcao != 5) {
            exibirMenu();
            try {
                opcao = Integer.parseInt(scanner.nextLine());
                switch (opcao) {
                    case 1:
                        adicionarContato();
                        break;
                    case 2:
                        listarContatos();
                        break;
                    case 3:
                        pesquisarContato();
                        break;
                    case 4:
                        excluirContato();
                        break;
                    case 5:
                        System.out.println("Saindo do programa. Até logo!");
                        break;
                    default:
                        System.out.println("Opção inválida. Tente novamente.");
                }
            } catch (NumberFormatException e) {
                System.out.println("Entrada inválida. Por favor, insira um número.");
            }
        }
    }

    // Método para exibir o menu de opções
    private static void exibirMenu() {
        System.out.println("=== Gerenciador de Contatos ===");
        System.out.println("1. Adicionar Contato");
        System.out.println("2. Listar Contatos");
        System.out.println("3. Pesquisar Contato");
        System.out.println("4. Excluir Contato");
        System.out.println("5. Sair");
        System.out.print("Escolha uma opção: ");
    }

    // Método para adicionar um novo contato
    private static void adicionarContato() {
        System.out.print("Digite o nome: ");
        String nome = scanner.nextLine();

        System.out.print("Digite o telefone: ");
        String telefone = scanner.nextLine();

        System.out.print("Digite o e-mail: ");
        String email = scanner.nextLine();

        Contato novoContato = new Contato(nome, telefone, email);
        contatos.add(novoContato);
        System.out.println("Contato adicionado com sucesso!");
    }

    // Método para listar todos os contatos
    private static void listarContatos() {
        if (contatos.isEmpty()) {
            System.out.println("Nenhum contato cadastrado.");
            return;
        }

        System.out.println("=== Lista de Contatos ===");
        for (Contato contato : contatos) {
            contato.exibirContato();
        }
    }

    // Método para pesquisar um contato pelo nome
    private static void pesquisarContato() {
        System.out.print("Digite o nome para pesquisar: ");
        String nomePesquisa = scanner.nextLine();
        boolean encontrado = false;

        for (Contato contato : contatos) {
            if (contato.getNome().equalsIgnoreCase(nomePesquisa)) {
                System.out.println("Contato encontrado:");
                contato.exibirContato();
                encontrado = true;
                break;
            }
        }

        if (!encontrado) {
            System.out.println("Contato não encontrado.");
        }
    }

    // Método para excluir um contato pelo nome
    private static void excluirContato() {
        System.out.print("Digite o nome do contato a ser excluído: ");
        String nomeExclusao = scanner.nextLine();
        boolean removido = false;

        for (int i = 0; i < contatos.size(); i++) {
            if (contatos.get(i).getNome().equalsIgnoreCase(nomeExclusao)) {
                contatos.remove(i);
                System.out.println("Contato excluído com sucesso.");
                removido = true;
                break;
            }
        }

        if (!removido) {
            System.out.println("Contato não encontrado.");
        }
    }
}
